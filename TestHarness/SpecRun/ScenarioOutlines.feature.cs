// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecRun
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Scenario Outlines", Description="Here we demonstrate how we deal with scenario outlines", SourceFile="ScenarioOutlines.feature", SourceLine=0)]
    public partial class ScenarioOutlinesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ScenarioOutlines.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Scenario Outlines", "Here we demonstrate how we deal with scenario outlines", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void ThisIsAScenarioOutlineWhereAllScenariosPass(string result, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("This is a scenario outline where all scenarios pass", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 8
  testRunner.Then(string.Format("the scenario will \'{0}\'", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where all scenarios pass, Variant 0", Description="\nThis means the entire scenario outline passes.", SourceLine=11)]
        public virtual void ThisIsAScenarioOutlineWhereAllScenariosPass_Variant0()
        {
            this.ThisIsAScenarioOutlineWhereAllScenariosPass("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where all scenarios pass, Variant 1", Description="\nThis means the entire scenario outline passes.", SourceLine=12)]
        public virtual void ThisIsAScenarioOutlineWhereAllScenariosPass_Variant1()
        {
            this.ThisIsAScenarioOutlineWhereAllScenariosPass("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where all scenarios pass, Variant 2", Description="\nThis means the entire scenario outline passes.", SourceLine=13)]
        public virtual void ThisIsAScenarioOutlineWhereAllScenariosPass_Variant2()
        {
            this.ThisIsAScenarioOutlineWhereAllScenariosPass("pass", ((string[])(null)));
        }
        
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive(string result, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("This is a scenario outline where one scenario is inconclusive", exampleTags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 21
  testRunner.Then(string.Format("the scenario will \'{0}\'", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where one scenario is inconclusive, Variant 0", Description="\nThis means the entire scenario outline is inconclusive.", SourceLine=24)]
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Variant0()
        {
            this.ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where one scenario is inconclusive, Variant 1", Description="\nThis means the entire scenario outline is inconclusive.", SourceLine=25)]
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Variant1()
        {
            this.ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where one scenario is inconclusive, Variant 2", Description="\nThis means the entire scenario outline is inconclusive.", SourceLine=26)]
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive_Variant2()
        {
            this.ThisIsAScenarioOutlineWhereOneScenarioIsInconclusive("inconclusive", ((string[])(null)));
        }
        
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioFails(string result, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("This is a scenario outline where one scenario fails", exampleTags);
#line 30
this.ScenarioSetup(scenarioInfo);
#line 34
  testRunner.Then(string.Format("the scenario will \'{0}\'", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where one scenario fails, Variant 0", Description="\nThis means the entire scenario outline fails.", SourceLine=37)]
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioFails_Variant0()
        {
            this.ThisIsAScenarioOutlineWhereOneScenarioFails("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where one scenario fails, Variant 1", Description="\nThis means the entire scenario outline fails.", SourceLine=38)]
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioFails_Variant1()
        {
            this.ThisIsAScenarioOutlineWhereOneScenarioFails("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("This is a scenario outline where one scenario fails, Variant 2", Description="\nThis means the entire scenario outline fails.", SourceLine=39)]
        public virtual void ThisIsAScenarioOutlineWhereOneScenarioFails_Variant2()
        {
            this.ThisIsAScenarioOutlineWhereOneScenarioFails("fail", ((string[])(null)));
        }
        
        public virtual void AndWeCanGoTotallyBonkersWithMultipleExampleSections_(string result, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("And we can go totally bonkers with multiple example sections.", exampleTags);
#line 43
this.ScenarioSetup(scenarioInfo);
#line 45
  testRunner.Then(string.Format("the scenario will \'{0}\'", result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("And we can go totally bonkers with multiple example sections., Examples 1, Varian" +
            "t 0", SourceLine=48)]
        public virtual void AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Variant0()
        {
            this.AndWeCanGoTotallyBonkersWithMultipleExampleSections_("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("And we can go totally bonkers with multiple example sections., Examples 1, Varian" +
            "t 1", SourceLine=49)]
        public virtual void AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet0_Variant1()
        {
            this.AndWeCanGoTotallyBonkersWithMultipleExampleSections_("pass", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("And we can go totally bonkers with multiple example sections., Examples 2, Varian" +
            "t 0", SourceLine=53)]
        public virtual void AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Variant0()
        {
            this.AndWeCanGoTotallyBonkersWithMultipleExampleSections_("inconclusive", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("And we can go totally bonkers with multiple example sections., Examples 2, Varian" +
            "t 1", SourceLine=54)]
        public virtual void AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet1_Variant1()
        {
            this.AndWeCanGoTotallyBonkersWithMultipleExampleSections_("inconclusive", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("And we can go totally bonkers with multiple example sections., Examples 3, Varian" +
            "t 0", SourceLine=58)]
        public virtual void AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Variant0()
        {
            this.AndWeCanGoTotallyBonkersWithMultipleExampleSections_("fail", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("And we can go totally bonkers with multiple example sections., Examples 3, Varian" +
            "t 1", SourceLine=59)]
        public virtual void AndWeCanGoTotallyBonkersWithMultipleExampleSections__ExampleSet2_Variant1()
        {
            this.AndWeCanGoTotallyBonkersWithMultipleExampleSections_("fail", ((string[])(null)));
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
